{
  "name": "TypeTemplate",
  "fullComment": " @custom:name TypeTemplate\n @custom:id 0x00\n @custom:supported BTC\n @author <author of the type>\n @notice <description of the type>\n @custom:verification <general verification rules>\n @custom:lut <lowestUsedTimestamp>",
  "description": "<description of the type>",
  "supported": [
    "BTC"
  ],
  "verification": "<general verification rules>\n ",
  "lut": "<lowestUsedTimestamp>",
  "proof": {
    "name": "Proof",
    "description": "Toplevel proof",
    "above": "",
    "below": "",
    "fullComment": " @notice Toplevel proof\n @param merkleProof Merkle proof corresponding to the attestation response.\n @param data Attestation response.",
    "params": [
      {
        "name": "merkleProof",
        "type": "bytes32[]",
        "typeSimple": "bytes32[]",
        "comment": "Merkle proof corresponding to the attestation response."
      },
      {
        "name": "data",
        "type": "struct TypeTemplate.Response",
        "typeSimple": "Response",
        "comment": "Attestation response."
      }
    ]
  },
  "request": {
    "name": "Request",
    "description": "Toplevel request",
    "above": "",
    "below": "",
    "fullComment": " @notice Toplevel request\n @param attestationType ID of the attestation type.\n @param sourceId ID of the data source.\n @param messageIntegrityCode `MessageIntegrityCode` that is derived from the expected response.\n @param requestBody Data defining the request. Type (struct) and interpretation is determined by the `attestationType`.",
    "params": [
      {
        "name": "attestationType",
        "type": "bytes32",
        "typeSimple": "bytes32",
        "comment": "ID of the attestation type."
      },
      {
        "name": "sourceId",
        "type": "bytes32",
        "typeSimple": "bytes32",
        "comment": "ID of the data source."
      },
      {
        "name": "messageIntegrityCode",
        "type": "bytes32",
        "typeSimple": "bytes32",
        "comment": "`MessageIntegrityCode` that is derived from the expected response."
      },
      {
        "name": "requestBody",
        "type": "struct TypeTemplate.RequestBody",
        "typeSimple": "RequestBody",
        "comment": "Data defining the request. Type (struct) and interpretation is determined by the `attestationType`."
      }
    ]
  },
  "response": {
    "name": "Response",
    "description": "Toplevel response",
    "above": "",
    "below": "",
    "fullComment": " @notice Toplevel response\n @param attestationType Extracted from the request.\n @param sourceId Extracted from the request.\n @param votingRound The ID of the State Connector round in which the request was considered.\n @param lowestUsedTimestamp The lowest timestamp used to generate the response.\n @param requestBody Extracted from the request.\n @param responseBody Data defining the response. The verification rules for the construction of the response body and the type are defined per specific `attestationType`.",
    "params": [
      {
        "name": "attestationType",
        "type": "bytes32",
        "typeSimple": "bytes32",
        "comment": "Extracted from the request."
      },
      {
        "name": "sourceId",
        "type": "bytes32",
        "typeSimple": "bytes32",
        "comment": "Extracted from the request."
      },
      {
        "name": "votingRound",
        "type": "uint64",
        "typeSimple": "uint64",
        "comment": "The ID of the State Connector round in which the request was considered."
      },
      {
        "name": "lowestUsedTimestamp",
        "type": "uint64",
        "typeSimple": "uint64",
        "comment": "The lowest timestamp used to generate the response."
      },
      {
        "name": "requestBody",
        "type": "struct TypeTemplate.RequestBody",
        "typeSimple": "RequestBody",
        "comment": "Extracted from the request."
      },
      {
        "name": "responseBody",
        "type": "struct TypeTemplate.ResponseBody",
        "typeSimple": "ResponseBody",
        "comment": "Data defining the response. The verification rules for the construction of the response body and the type are defined per specific `attestationType`."
      }
    ]
  },
  "requestBody": {
    "name": "RequestBody",
    "description": "Request body for TypeTemplate attestation type",
    "above": "Additional explanation for 'above' slot in generated Markdown docs",
    "below": "Additional explanation for 'below' slot in generated Markdown docs",
    "fullComment": " @notice Request body for TypeTemplate attestation type\n @custom:above Additional explanation for 'above' slot in generated Markdown docs\n @custom:below Additional explanation for 'below' slot in generated Markdown docs\n @param bytes32Field example bytes32 field with explanation\n @param boolField example bool field field with explanation\n @param requestSubstruct1 example RequestSubstruct1 field with explanation\n @param requestSubstruct2Array example RequestSubstruct2 array field with explanation*",
    "params": [
      {
        "name": "bytes32Field",
        "type": "bytes32",
        "typeSimple": "bytes32",
        "comment": "example bytes32 field with explanation"
      },
      {
        "name": "boolField",
        "type": "bool",
        "typeSimple": "bool",
        "comment": "example bool field field with explanation"
      },
      {
        "name": "requestSubstruct1",
        "type": "struct TypeTemplate.RequestSubstruct1",
        "typeSimple": "RequestSubstruct1",
        "comment": "example RequestSubstruct1 field with explanation"
      },
      {
        "name": "requestSubstruct2Array",
        "type": "struct TypeTemplate.RequestSubstruct2[]",
        "typeSimple": "RequestSubstruct2[]",
        "comment": "example RequestSubstruct2 array field with explanation*"
      }
    ]
  },
  "responseBody": {
    "name": "ResponseBody",
    "description": "Response body for TypeTemplate attestation type.",
    "above": "Additional explanation for 'above' slot in generated Markdown docs",
    "below": "Additional explanation for 'below' slot in generated Markdown docs",
    "fullComment": " @notice Response body for TypeTemplate attestation type.\n @custom:above Additional explanation for 'above' slot in generated Markdown docs\n @custom:below Additional explanation for 'below' slot in generated Markdown docs\n @param templateResponseField example bytes32 field with explanation\n @param responseSubstruct1Array example ResponseSubstruct1 array field with explanation*",
    "params": [
      {
        "name": "templateResponseField",
        "type": "bytes32",
        "typeSimple": "bytes32",
        "comment": "example bytes32 field with explanation"
      },
      {
        "name": "responseSubstruct1Array",
        "type": "struct TypeTemplate.ResponseSubstruct1[]",
        "typeSimple": "ResponseSubstruct1[]",
        "comment": "example ResponseSubstruct1 array field with explanation*"
      }
    ]
  },
  "requestStructs": [
    {
      "name": "RequestSubstruct1",
      "description": "Additional struct first used in Request body fields",
      "above": "Additional explanation for 'above' slot in generated Markdown docs",
      "below": "Additional explanation for 'below' slot in generated Markdown docs",
      "fullComment": " @notice Additional struct first used in Request body fields\n @custom:above Additional explanation for 'above' slot in generated Markdown docs\n @custom:below Additional explanation for 'below' slot in generated Markdown docs\n @param templateStructField example bytes32 field with explanation\n @param uintArrayField example uint256 array field with explanation\n @param boolArrayField example bool array field with explanation*",
      "params": [
        {
          "name": "templateStructField",
          "type": "bytes32",
          "typeSimple": "bytes32",
          "comment": "example bytes32 field with explanation"
        },
        {
          "name": "uintArrayField",
          "type": "uint256[]",
          "typeSimple": "uint256[]",
          "comment": "example uint256 array field with explanation"
        },
        {
          "name": "boolArrayField",
          "type": "bool[]",
          "typeSimple": "bool[]",
          "comment": "example bool array field with explanation*"
        }
      ]
    },
    {
      "name": "RequestSubstruct2",
      "description": "Additional struct first used in Request body fields",
      "above": "Additional explanation for 'above' slot in generated Markdown docs",
      "below": "Additional explanation for 'below' slot in generated Markdown docs",
      "fullComment": " @notice Additional struct first used in Request body fields\n @custom:above Additional explanation for 'above' slot in generated Markdown docs\n @custom:below Additional explanation for 'below' slot in generated Markdown docs\n @param templateStructField example bytes32 field with explanation\n @param intArrayField example int256 array field with explanation\n @param boolArrayField example bool array field with explanation*",
      "params": [
        {
          "name": "templateStructField",
          "type": "bytes32",
          "typeSimple": "bytes32",
          "comment": "example bytes32 field with explanation"
        },
        {
          "name": "intArrayField",
          "type": "int256[]",
          "typeSimple": "int256[]",
          "comment": "example int256 array field with explanation"
        },
        {
          "name": "boolArrayField",
          "type": "bool[]",
          "typeSimple": "bool[]",
          "comment": "example bool array field with explanation*"
        }
      ]
    }
  ],
  "responseStructs": [
    {
      "name": "ResponseSubstruct1",
      "description": "Additional struct first used in Response body fields",
      "above": "Additional explanation for 'above' slot in generated Markdown docs",
      "below": "Additional explanation for 'below' slot in generated Markdown docs",
      "fullComment": " @notice Additional struct first used in Response body fields\n @custom:above Additional explanation for 'above' slot in generated Markdown docs\n @custom:below Additional explanation for 'below' slot in generated Markdown docs\n @param templateStructField description*",
      "params": [
        {
          "name": "templateStructField",
          "type": "bytes32",
          "typeSimple": "bytes32",
          "comment": "description*"
        }
      ]
    }
  ],
  "requestAbi": {
    "components": [
      {
        "internalType": "bytes32",
        "name": "attestationType",
        "type": "bytes32"
      },
      {
        "internalType": "bytes32",
        "name": "sourceId",
        "type": "bytes32"
      },
      {
        "internalType": "bytes32",
        "name": "messageIntegrityCode",
        "type": "bytes32"
      },
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "bytes32Field",
            "type": "bytes32"
          },
          {
            "internalType": "bool",
            "name": "boolField",
            "type": "bool"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "templateStructField",
                "type": "bytes32"
              },
              {
                "internalType": "uint256[]",
                "name": "uintArrayField",
                "type": "uint256[]"
              },
              {
                "internalType": "bool[]",
                "name": "boolArrayField",
                "type": "bool[]"
              }
            ],
            "internalType": "struct TypeTemplate.RequestSubstruct1",
            "name": "requestSubstruct1",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "templateStructField",
                "type": "bytes32"
              },
              {
                "internalType": "int256[]",
                "name": "intArrayField",
                "type": "int256[]"
              },
              {
                "internalType": "bool[]",
                "name": "boolArrayField",
                "type": "bool[]"
              }
            ],
            "internalType": "struct TypeTemplate.RequestSubstruct2[]",
            "name": "requestSubstruct2Array",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct TypeTemplate.RequestBody",
        "name": "requestBody",
        "type": "tuple"
      }
    ],
    "internalType": "struct TypeTemplate.Request",
    "name": "_request",
    "type": "tuple"
  },
  "responseAbi": {
    "components": [
      {
        "internalType": "bytes32",
        "name": "attestationType",
        "type": "bytes32"
      },
      {
        "internalType": "bytes32",
        "name": "sourceId",
        "type": "bytes32"
      },
      {
        "internalType": "uint64",
        "name": "votingRound",
        "type": "uint64"
      },
      {
        "internalType": "uint64",
        "name": "lowestUsedTimestamp",
        "type": "uint64"
      },
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "bytes32Field",
            "type": "bytes32"
          },
          {
            "internalType": "bool",
            "name": "boolField",
            "type": "bool"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "templateStructField",
                "type": "bytes32"
              },
              {
                "internalType": "uint256[]",
                "name": "uintArrayField",
                "type": "uint256[]"
              },
              {
                "internalType": "bool[]",
                "name": "boolArrayField",
                "type": "bool[]"
              }
            ],
            "internalType": "struct TypeTemplate.RequestSubstruct1",
            "name": "requestSubstruct1",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "templateStructField",
                "type": "bytes32"
              },
              {
                "internalType": "int256[]",
                "name": "intArrayField",
                "type": "int256[]"
              },
              {
                "internalType": "bool[]",
                "name": "boolArrayField",
                "type": "bool[]"
              }
            ],
            "internalType": "struct TypeTemplate.RequestSubstruct2[]",
            "name": "requestSubstruct2Array",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct TypeTemplate.RequestBody",
        "name": "requestBody",
        "type": "tuple"
      },
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "templateResponseField",
            "type": "bytes32"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "templateStructField",
                "type": "bytes32"
              }
            ],
            "internalType": "struct TypeTemplate.ResponseSubstruct1[]",
            "name": "responseSubstruct1Array",
            "type": "tuple[]"
          }
        ],
        "internalType": "struct TypeTemplate.ResponseBody",
        "name": "responseBody",
        "type": "tuple"
      }
    ],
    "internalType": "struct TypeTemplate.Response",
    "name": "_response",
    "type": "tuple"
  },
  "proofAbi": {
    "components": [
      {
        "internalType": "bytes32[]",
        "name": "merkleProof",
        "type": "bytes32[]"
      },
      {
        "components": [
          {
            "internalType": "bytes32",
            "name": "attestationType",
            "type": "bytes32"
          },
          {
            "internalType": "bytes32",
            "name": "sourceId",
            "type": "bytes32"
          },
          {
            "internalType": "uint64",
            "name": "votingRound",
            "type": "uint64"
          },
          {
            "internalType": "uint64",
            "name": "lowestUsedTimestamp",
            "type": "uint64"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "bytes32Field",
                "type": "bytes32"
              },
              {
                "internalType": "bool",
                "name": "boolField",
                "type": "bool"
              },
              {
                "components": [
                  {
                    "internalType": "bytes32",
                    "name": "templateStructField",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "uint256[]",
                    "name": "uintArrayField",
                    "type": "uint256[]"
                  },
                  {
                    "internalType": "bool[]",
                    "name": "boolArrayField",
                    "type": "bool[]"
                  }
                ],
                "internalType": "struct TypeTemplate.RequestSubstruct1",
                "name": "requestSubstruct1",
                "type": "tuple"
              },
              {
                "components": [
                  {
                    "internalType": "bytes32",
                    "name": "templateStructField",
                    "type": "bytes32"
                  },
                  {
                    "internalType": "int256[]",
                    "name": "intArrayField",
                    "type": "int256[]"
                  },
                  {
                    "internalType": "bool[]",
                    "name": "boolArrayField",
                    "type": "bool[]"
                  }
                ],
                "internalType": "struct TypeTemplate.RequestSubstruct2[]",
                "name": "requestSubstruct2Array",
                "type": "tuple[]"
              }
            ],
            "internalType": "struct TypeTemplate.RequestBody",
            "name": "requestBody",
            "type": "tuple"
          },
          {
            "components": [
              {
                "internalType": "bytes32",
                "name": "templateResponseField",
                "type": "bytes32"
              },
              {
                "components": [
                  {
                    "internalType": "bytes32",
                    "name": "templateStructField",
                    "type": "bytes32"
                  }
                ],
                "internalType": "struct TypeTemplate.ResponseSubstruct1[]",
                "name": "responseSubstruct1Array",
                "type": "tuple[]"
              }
            ],
            "internalType": "struct TypeTemplate.ResponseBody",
            "name": "responseBody",
            "type": "tuple"
          }
        ],
        "internalType": "struct TypeTemplate.Response",
        "name": "data",
        "type": "tuple"
      }
    ],
    "internalType": "struct TypeTemplate.Proof",
    "name": "_proof",
    "type": "tuple"
  }
}